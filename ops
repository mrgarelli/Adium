#!/usr/bin/env xonsh

import sys
from declarecli import DeclarativeCommands, DeclarativeOptions, DeclarativeCLI

version = 'Version: 0.0.1'

synopsis = '''\
Usage: ./ops <--option|-o> <command>
tools to manage adium integration pipeline and testing'''

class CLI(DeclarativeCLI):
    __level__ = 0
    verbose = False
    class Synopsis:
        @staticmethod
        def body(): print(synopsis)

    class Options(DeclarativeOptions):
        class help_h:
            description = 'extended help message of this package'
            @staticmethod
            def instructions():
                cli.extended_help()
                sys.exit(0)
        class verbose_v:
            description = 'get more descriptive command output'
            @staticmethod
            def instructions():
                cli.verbose = True
        class version:
            description = 'output the current tool version'
            @staticmethod
            def instructions():
                print(version)
                sys.exit(0)

    class Commands(DeclarativeCommands):
        class build:
            description = 'create project by pulling dependencies'
            @staticmethod
            def instructions(remainder):
                ./scripts/build.xsh
        class load:
            description = 'run the extension in chromium (kills all instances of chromium)'
            @staticmethod
            def instructions(remainder):
                ./scripts/load.sh &
        class test:
            description = 'run integration integration_tests for uBlock'
            @staticmethod
            def instructions(remainder):
                rtn = run_tests()
                print(rtn)

        def __default_no_args__(self):
            cli.help()

cli = CLI()
cli.run(sys.argv[1:])
